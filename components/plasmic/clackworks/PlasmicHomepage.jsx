// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ggKD3RisT9Ubzud33WNkiG
// Component: u0sNXC5X5Hnc
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: jQ3WjwLWnw/component
import ArticleCard from "../../ArticleCard"; // plasmic-import: CWGZEjAICQ/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_clackworks.module.css"; // plasmic-import: ggKD3RisT9Ubzud33WNkiG/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: u0sNXC5X5Hnc/css

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

export const defaultHomepage__Args = {};

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};
  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"layout"}
          data-plasmic-override={overrides.layout}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.layout
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <hgroup
            data-plasmic-name={"heading"}
            data-plasmic-override={overrides.heading}
            className={classNames(projectcss.all, sty.heading)}
          >
            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              <p.Trans>{"Keyboards 101"}</p.Trans>
            </h1>

            <p
              data-plasmic-name={"p"}
              data-plasmic-override={overrides.p}
              className={classNames(
                projectcss.all,
                projectcss.p,
                projectcss.__wab_text,
                sty.p
              )}
            >
              <p.Trans>
                {"Discover resources for begginers into the hobby."}
              </p.Trans>
            </p>
          </hgroup>

          <div
            data-plasmic-name={"articleList"}
            data-plasmic-override={overrides.articleList}
            className={classNames(projectcss.all, sty.articleList)}
          >
            <ArticleCard
              className={classNames("__wab_instance", sty.articleCard__tAv9B)}
            />

            <ArticleCard
              articleImage={
                <p.PlasmicImg
                  data-plasmic-name={"articleImage2"}
                  data-plasmic-override={overrides.articleImage2}
                  alt={""}
                  className={classNames(sty.articleImage2)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/clackwrks/images/variationCpng.png",
                    fullWidth: 420,
                    fullHeight: 489,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames("__wab_instance", sty.articleCard___4Onav)}
            />

            <ArticleCard
              articleImage={
                <p.PlasmicImg
                  data-plasmic-name={"articleImage3"}
                  data-plasmic-override={overrides.articleImage3}
                  alt={""}
                  className={classNames(sty.articleImage3)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/clackwrks/images/variationCpng.png",
                    fullWidth: 420,
                    fullHeight: 489,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames("__wab_instance", sty.articleCard__sTlqt)}
            />

            <ArticleCard
              articleImage={
                <p.PlasmicImg
                  data-plasmic-name={"articleImage4"}
                  data-plasmic-override={overrides.articleImage4}
                  alt={""}
                  className={classNames(sty.articleImage4)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/clackwrks/images/variationCpng.png",
                    fullWidth: 420,
                    fullHeight: 489,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames("__wab_instance", sty.articleCard__f6BlQ)}
            />

            <ArticleCard
              articleImage={
                <p.PlasmicImg
                  data-plasmic-name={"articleImage5"}
                  data-plasmic-override={overrides.articleImage5}
                  alt={""}
                  className={classNames(sty.articleImage5)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/clackwrks/images/variationCpng.png",
                    fullWidth: 420,
                    fullHeight: 489,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames("__wab_instance", sty.articleCard__la6Uz)}
            />

            <ArticleCard
              articleImage={
                <p.PlasmicImg
                  data-plasmic-name={"articleImage6"}
                  data-plasmic-override={overrides.articleImage6}
                  alt={""}
                  className={classNames(sty.articleImage6)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/clackwrks/images/variationCpng.png",
                    fullWidth: 420,
                    fullHeight: 489,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames("__wab_instance", sty.articleCard__g4Xka)}
              title={<p.Trans>{"A guide to keyboard switches"}</p.Trans>}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  layout: [
    "layout",
    "navbar",
    "heading",
    "h1",
    "p",
    "articleList",
    "articleImage2",
    "articleImage3",
    "articleImage4",
    "articleImage5",
    "articleImage6"
  ],

  navbar: ["navbar"],
  heading: ["heading", "h1", "p"],
  h1: ["h1"],
  p: ["p"],
  articleList: [
    "articleList",
    "articleImage2",
    "articleImage3",
    "articleImage4",
    "articleImage5",
    "articleImage6"
  ],

  articleImage2: ["articleImage2"],
  articleImage3: ["articleImage3"],
  articleImage4: ["articleImage4"],
  articleImage5: ["articleImage5"],
  articleImage6: ["articleImage6"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "layout") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("layout"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    heading: makeNodeComponent("heading"),
    h1: makeNodeComponent("h1"),
    p: makeNodeComponent("p"),
    articleList: makeNodeComponent("articleList"),
    articleImage2: makeNodeComponent("articleImage2"),
    articleImage3: makeNodeComponent("articleImage3"),
    articleImage4: makeNodeComponent("articleImage4"),
    articleImage5: makeNodeComponent("articleImage5"),
    articleImage6: makeNodeComponent("articleImage6"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
